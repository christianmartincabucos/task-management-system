version: '3'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: task-backend
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
    depends_on:
      - db
      - redis

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

  # Nginx service
  nginx:
    image: nginx:alpine
    container_name: task-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    networks:
      - app-network
    depends_on:
      - backend

  # Database service
  db:
    image: mysql:8.0
    container_name: task-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-task_management}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
      MYSQL_USER: ${DB_USERNAME:-task_user}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    ports:
      - "3306:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  # Redis service
  redis:
    image: redis:alpine
    container_name: task-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Laravel Echo Server
  echo-server:
    image: oanhnn/laravel-echo-server
    container_name: task-echo-server
    restart: unless-stopped
    ports:
      - "6001:6001"
    volumes:
      - ./docker/echo-server/laravel-echo-server.json:/app/laravel-echo-server.json
    networks:
      - app-network
    depends_on:
      - redis

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local